/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package module.pkg5;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ZAN
 */
public class CRUD extends javax.swing.JFrame {
    Connection conn;
    private  DefaultTableModel modelw;
    private  DefaultTableModel modelp;
    private  DefaultTableModel modelt;
    /**
     * Creates new form CRUD
     */
    public CRUD() {
        initComponents();
       conn = Koneksi.getConnection();
        
        modelw = new DefaultTableModel();
        modelp = new DefaultTableModel();
        modelt = new DefaultTableModel();
        
        tblWork.setModel(modelw);
        tblWork.setEnabled(false);
        modelw.addColumn("WORKER ID");
        modelw.addColumn("NAME");
        modelw.addColumn("OCCUPATION");
        modelw.addColumn("DEPARTMENT");
        
        
        tblProj.setModel(modelp);
        tblProj.setEnabled(false);
        modelp.addColumn("PROJECT ID");
        modelp.addColumn("PROJECT NAME");
        modelp.addColumn("WORK DURATION");
        
        tblTrans.setModel(modelt);
        tblTrans.setEnabled(false);
        modelt.addColumn("WORKER_ID");
        modelt.addColumn("PROJECT_ID");
        modelt.addColumn("ROLE");
        
        loadDataK();
        loadDataP();
        loadDataT();    

        IdWork();
        IdProj();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        TabPane = new javax.swing.JTabbedPane();
        Workers = new javax.swing.JPanel();
        TITLEW = new javax.swing.JPanel();
        picw1 = new javax.swing.JLabel();
        lTitlew = new javax.swing.JLabel();
        picw2 = new javax.swing.JLabel();
        pnlW = new javax.swing.JPanel();
        lInput = new javax.swing.JLabel();
        lIdW = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        lOccupation = new javax.swing.JLabel();
        lDepartment = new javax.swing.JLabel();
        tfIdw = new javax.swing.JTextField();
        tfNamew = new javax.swing.JTextField();
        cbOcc = new javax.swing.JComboBox<>();
        cbDepart = new javax.swing.JComboBox<>();
        PANELbtnw1 = new javax.swing.JPanel();
        btnClearW = new javax.swing.JButton();
        btnExitW = new javax.swing.JButton();
        PANELbtnw2 = new javax.swing.JPanel();
        btnAddW = new javax.swing.JButton();
        btnUpdW = new javax.swing.JButton();
        btnDelW = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblWork = new javax.swing.JTable();
        Project = new javax.swing.JPanel();
        TITLEP = new javax.swing.JPanel();
        picp1 = new javax.swing.JLabel();
        lTitlep = new javax.swing.JLabel();
        picp2 = new javax.swing.JLabel();
        pnlW1 = new javax.swing.JPanel();
        lInput1 = new javax.swing.JLabel();
        lidp = new javax.swing.JLabel();
        lProname = new javax.swing.JLabel();
        lDuration = new javax.swing.JLabel();
        tfIdp = new javax.swing.JTextField();
        tfProname = new javax.swing.JTextField();
        tfDuration = new javax.swing.JTextField();
        PANELbtnp1 = new javax.swing.JPanel();
        btnClearP = new javax.swing.JButton();
        btnExitP = new javax.swing.JButton();
        PANELbtnp2 = new javax.swing.JPanel();
        btnAddP = new javax.swing.JButton();
        btnUpdP = new javax.swing.JButton();
        btnDelP = new javax.swing.JButton();
        JScrollPane5 = new javax.swing.JScrollPane();
        tblProj = new javax.swing.JTable();
        Transaction = new javax.swing.JPanel();
        TITLET = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lTitlet = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pnlW2 = new javax.swing.JPanel();
        lInput2 = new javax.swing.JLabel();
        lidW = new javax.swing.JLabel();
        Lpron2 = new javax.swing.JLabel();
        lRole = new javax.swing.JLabel();
        tfRole = new javax.swing.JTextField();
        cbWork = new javax.swing.JComboBox<>();
        cbProj = new javax.swing.JComboBox<>();
        PANELbtnt1 = new javax.swing.JPanel();
        btnClearT = new javax.swing.JButton();
        btnExitT = new javax.swing.JButton();
        PANELbtnt4 = new javax.swing.JPanel();
        btnAddT = new javax.swing.JButton();
        btnUpdT = new javax.swing.JButton();
        btnDelT = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTrans = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabPane.setBackground(new java.awt.Color(153, 255, 204));
        TabPane.setForeground(new java.awt.Color(0, 0, 0));

        Workers.setBackground(new java.awt.Color(153, 255, 204));
        Workers.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        Workers.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TITLEW.setBackground(new java.awt.Color(0, 255, 153));
        TITLEW.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        TITLEW.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        picw1.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\Work.png")); // NOI18N
        TITLEW.add(picw1);

        lTitlew.setFont(new java.awt.Font("Ravie", 0, 36)); // NOI18N
        lTitlew.setForeground(new java.awt.Color(0, 0, 0));
        lTitlew.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTitlew.setText("W O R K E R S");
        TITLEW.add(lTitlew);

        picw2.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\Work.png")); // NOI18N
        TITLEW.add(picw2);

        Workers.add(TITLEW, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 670, 60));

        pnlW.setBackground(new java.awt.Color(0, 153, 153));
        pnlW.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        pnlW.setLayout(new java.awt.GridBagLayout());

        lInput.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lInput.setText("INPUT DATA ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 3, 0, 0);
        pnlW.add(lInput, gridBagConstraints);

        lIdW.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lIdW.setText("WORKER ID     =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 5, 0, 0);
        pnlW.add(lIdW, gridBagConstraints);

        lName.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lName.setText("NAME               =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 5, 0, 0);
        pnlW.add(lName, gridBagConstraints);

        lOccupation.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lOccupation.setText("OCCUPATION  =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 5, 0, 0);
        pnlW.add(lOccupation, gridBagConstraints);

        lDepartment.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lDepartment.setText("DEPARTMENT =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 5, 0, 0);
        pnlW.add(lDepartment, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 233;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 3, 0, 0);
        pnlW.add(tfIdw, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 233;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 3, 0, 0);
        pnlW.add(tfNamew, gridBagConstraints);

        cbOcc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- CHOOSE --", "Full Stack Developer", "DevOps Engineer", "Server Maintenance", "Hardware Maintenance", "Risk Management", "Senior Asset Management" }));
        cbOcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOccActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 125;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 5, 0, 0);
        pnlW.add(cbOcc, gridBagConstraints);

        cbDepart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- CHOOSE --", "Information Technology", "Maintenance Management", "Asset Management" }));
        cbDepart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDepartActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 121;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 6, 11, 7);
        pnlW.add(cbDepart, gridBagConstraints);

        Workers.add(pnlW, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 440, 220));

        PANELbtnw1.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnw1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnw1.setLayout(new java.awt.GridLayout(2, 1));

        btnClearW.setText("CLEAR");
        btnClearW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearWActionPerformed(evt);
            }
        });
        PANELbtnw1.add(btnClearW);

        btnExitW.setText("EXIT");
        btnExitW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitWActionPerformed(evt);
            }
        });
        PANELbtnw1.add(btnExitW);

        Workers.add(PANELbtnw1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 120, 220));

        PANELbtnw2.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnw2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnw2.setLayout(new java.awt.GridLayout(3, 1));

        btnAddW.setText("ADD");
        btnAddW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWActionPerformed(evt);
            }
        });
        PANELbtnw2.add(btnAddW);

        btnUpdW.setText("UPDATE");
        btnUpdW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdWActionPerformed(evt);
            }
        });
        PANELbtnw2.add(btnUpdW);

        btnDelW.setText("DELETE");
        btnDelW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelWActionPerformed(evt);
            }
        });
        PANELbtnw2.add(btnDelW);

        Workers.add(PANELbtnw2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 120, 220));

        tblWork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tblWork);

        Workers.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 281, 680, 170));

        TabPane.addTab("WORKERS", Workers);

        Project.setBackground(new java.awt.Color(153, 255, 204));
        Project.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        Project.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TITLEP.setBackground(new java.awt.Color(0, 255, 153));
        TITLEP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        TITLEP.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        picp1.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\project.png")); // NOI18N
        TITLEP.add(picp1);

        lTitlep.setFont(new java.awt.Font("Ravie", 0, 36)); // NOI18N
        lTitlep.setForeground(new java.awt.Color(0, 0, 0));
        lTitlep.setText("P R O J E C T S");
        TITLEP.add(lTitlep);

        picp2.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\project.png")); // NOI18N
        TITLEP.add(picp2);

        Project.add(TITLEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 670, 60));

        pnlW1.setBackground(new java.awt.Color(0, 153, 153));
        pnlW1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        pnlW1.setLayout(new java.awt.GridBagLayout());

        lInput1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lInput1.setText("INPUT DATA ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 136, 0, 0);
        pnlW1.add(lInput1, gridBagConstraints);

        lidp.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lidp.setText("PROJECT ID         =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 11, 0, 0);
        pnlW1.add(lidp, gridBagConstraints);

        lProname.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lProname.setText("PROJECT NAME =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 11, 0, 0);
        pnlW1.add(lProname, gridBagConstraints);

        lDuration.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lDuration.setText("DURATION         =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 11, 0, 0);
        pnlW1.add(lDuration, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 216;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 7);
        pnlW1.add(tfIdp, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 212;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 6, 0, 0);
        pnlW1.add(tfProname, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 212;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 6, 28, 0);
        pnlW1.add(tfDuration, gridBagConstraints);

        Project.add(pnlW1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 440, 220));

        PANELbtnp1.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnp1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnp1.setLayout(new java.awt.GridLayout(2, 1));

        btnClearP.setText("CLEAR");
        btnClearP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearPActionPerformed(evt);
            }
        });
        PANELbtnp1.add(btnClearP);

        btnExitP.setText("EXIT");
        btnExitP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitPActionPerformed(evt);
            }
        });
        PANELbtnp1.add(btnExitP);

        Project.add(PANELbtnp1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 120, 220));

        PANELbtnp2.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnp2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnp2.setLayout(new java.awt.GridLayout(3, 1));

        btnAddP.setText("ADD");
        btnAddP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPActionPerformed(evt);
            }
        });
        PANELbtnp2.add(btnAddP);

        btnUpdP.setText("UPDATE");
        btnUpdP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdPActionPerformed(evt);
            }
        });
        PANELbtnp2.add(btnUpdP);

        btnDelP.setText("DELETE");
        btnDelP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelPActionPerformed(evt);
            }
        });
        PANELbtnp2.add(btnDelP);

        Project.add(PANELbtnp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 120, 220));

        tblProj.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JScrollPane5.setViewportView(tblProj);

        Project.add(JScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 281, 680, 170));

        TabPane.addTab("PROJECTS", Project);

        Transaction.setBackground(new java.awt.Color(153, 255, 204));
        Transaction.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        Transaction.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TITLET.setBackground(new java.awt.Color(0, 255, 153));
        TITLET.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 3));
        TITLET.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 50, 5));

        jLabel1.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\TRANS.png")); // NOI18N
        TITLET.add(jLabel1);

        lTitlet.setFont(new java.awt.Font("Ravie", 0, 24)); // NOI18N
        lTitlet.setForeground(new java.awt.Color(0, 0, 0));
        lTitlet.setText("T R A N S A C T I O N");
        TITLET.add(lTitlet);

        jLabel2.setIcon(new javax.swing.ImageIcon("A:\\.MINE\\CHAPTER 3\\Visual Programming\\img\\TRANS.png")); // NOI18N
        TITLET.add(jLabel2);

        Transaction.add(TITLET, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 670, 60));

        pnlW2.setBackground(new java.awt.Color(0, 153, 153));
        pnlW2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        pnlW2.setLayout(new java.awt.GridBagLayout());

        lInput2.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lInput2.setText("INPUT DATA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 0);
        pnlW2.add(lInput2, gridBagConstraints);

        lidW.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lidW.setText("WORKER ID     =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 5, 0, 0);
        pnlW2.add(lidW, gridBagConstraints);

        Lpron2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Lpron2.setText("PROJECT ID    =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 5, 0, 0);
        pnlW2.add(Lpron2, gridBagConstraints);

        lRole.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lRole.setText("ROLE                =");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 5, 0, 0);
        pnlW2.add(lRole, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 227;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 4, 38, 17);
        pnlW2.add(tfRole, gridBagConstraints);

        cbWork.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- CHOOSE --" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 183;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 6, 0, 17);
        pnlW2.add(cbWork, gridBagConstraints);

        cbProj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- CHOOSE --" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 183;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 0, 17);
        pnlW2.add(cbProj, gridBagConstraints);

        Transaction.add(pnlW2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 440, 220));

        PANELbtnt1.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnt1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnt1.setLayout(new java.awt.GridLayout(2, 1));

        btnClearT.setText("CLEAR");
        btnClearT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTActionPerformed(evt);
            }
        });
        PANELbtnt1.add(btnClearT);

        btnExitT.setText("EXIT");
        btnExitT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitTActionPerformed(evt);
            }
        });
        PANELbtnt1.add(btnExitT);

        Transaction.add(PANELbtnt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 60, 120, 220));

        PANELbtnt4.setBackground(new java.awt.Color(255, 204, 102));
        PANELbtnt4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 5));
        PANELbtnt4.setLayout(new java.awt.GridLayout(3, 1));

        btnAddT.setText("ADD");
        btnAddT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTActionPerformed(evt);
            }
        });
        PANELbtnt4.add(btnAddT);

        btnUpdT.setText("UPDATE");
        btnUpdT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdTActionPerformed(evt);
            }
        });
        PANELbtnt4.add(btnUpdT);

        btnDelT.setText("DELETE");
        btnDelT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelTActionPerformed(evt);
            }
        });
        PANELbtnt4.add(btnDelT);

        Transaction.add(PANELbtnt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 120, 220));

        tblTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblTrans);

        Transaction.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 281, 680, 170));

        TabPane.addTab("TRANSACTION", Transaction);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadDataK() {
        modelw.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM karyawan";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                modelw.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("nama"),
                    rs.getString("jabatan"),
                    rs.getString("departemen")
                });
            }
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
        }
    }
    
        private void loadDataP() {
        modelp.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM proyek";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                modelp.addRow(new Object[]{
                    rs.getInt("id"),
                    rs.getString("nama_proyek"),
                    rs.getString("durasi_pengerjaan")
                });
            }
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
        }
    }
        
    private void loadDataT() {
        modelt.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM transaksi";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                modelt.addRow(new Object[]{
                    rs.getInt("id_karyawan"),
                    rs.getString("id_proyek"),
                    rs.getString("peran")
                });
            }
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
        }
    }
    
    private void IdWork() {
        try {
            String sql = "SELECT id FROM karyawan";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            cbWork.removeAllItems(); 
            int count = 0;
            while (rs.next()) {
                cbWork.addItem(rs.getString("id"));
                count++;
            }
        } catch (SQLException e) {
            System.out.println("Error loading Worker IDs: " + e.getMessage());
        }
    }
    
    private void IdProj() {
        try {
            String sql = "SELECT id FROM proyek";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            cbProj.removeAllItems();  
            int count = 0;
            while (rs.next()) {
                cbProj.addItem(rs.getString("id"));
                count++;
            }
        } catch (SQLException e) {
            System.out.println("Error loading Project IDs: " + e.getMessage());
        }
    }

    private void btnAddWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWActionPerformed
    String occupation =  String.valueOf(CRUD.cbOcc.getSelectedItem());        
    String department =  String.valueOf(CRUD.cbDepart.getSelectedItem());
    

    if(occupation.equals("-- CHOOSE --" ) || department.equals("-- CHOOSE --" )){
        JOptionPane.showMessageDialog(null, "PLEASE, CHOOSE ANY OCCUPATION","DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    }
    
    if(tfNamew.getText().isEmpty()){
        JOptionPane.showMessageDialog(this,"PLEASE FILL IN THE BLANKS","DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    } else if(occupation.equals("-- CHOOSE --") || department.equals("-- CHOOSE --") ){
        JOptionPane.showMessageDialog(this,"PLEASE FILL IN THE BLANKS","DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    } else {
        try {
            String sql = "INSERT INTO karyawan (nama, jabatan, departemen) VALUES (?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, tfNamew.getText());
            ps.setString(2, cbOcc.getSelectedItem().toString());
            ps.setString(3, cbDepart.getSelectedItem().toString());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data saved successfully");
            loadDataK();
            IdWork();
        } catch (SQLException e) {
            System.out.println("Error Save Data: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnAddWActionPerformed

    private void btnAddPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPActionPerformed
    if(tfProname.getText().isEmpty() || tfDuration.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "PLEASE FILL IN THE BLANKS", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    } else {
        try {
            String sql = "INSERT INTO proyek (nama_proyek, durasi_pengerjaan) VALUES (?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, tfProname.getText());
            ps.setString(2, tfDuration.getText());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data saved successfully");
            loadDataP();
            IdProj();
        } catch (SQLException e) {
            System.out.println("Error Save Data: " + e.getMessage());
        }
    }  
    }//GEN-LAST:event_btnAddPActionPerformed

    private void btnAddTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTActionPerformed
        if(tfRole.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"PLEASE FILL IN THE BLANKS","DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
        }else{
            try{
                String sql = "INSERT INTO transaksi (id_karyawan, id_proyek, peran) VALUES (?, ?, ?)";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setString(1, cbWork.getSelectedItem().toString());
                ps.setString(2, cbProj.getSelectedItem().toString());
                ps.setString(3, tfRole.getText());
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data saved successfully");
                loadDataT();
            } catch (SQLException e) {
                System.out.println("Error Save Data" + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnAddTActionPerformed

    private void btnUpdWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdWActionPerformed
    String occupation = String.valueOf(CRUD.cbOcc.getSelectedItem());        
    String department = String.valueOf(CRUD.cbDepart.getSelectedItem());
    
    
    if(occupation.equals("-- CHOOSE --" ) || department.equals("-- CHOOSE --" )){
        JOptionPane.showMessageDialog(null, "PLEASE, CHOOSE ANY OCCUPATION","DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    }
    if (tblWork.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    } else if (occupation.equals("-- CHOOSE --") || department.equals("-- CHOOSE --")) {
        JOptionPane.showMessageDialog(this, "PLEASE CHOOSE AT THE COMBOBOX", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    } else {
        try {
            String sql = "SELECT nama, jabatan, departemen FROM karyawan WHERE id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(tfIdw.getText()));
            ResultSet rs = ps.executeQuery();
            
            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String nama = tfNamew.getText().isEmpty() ? rs.getString("nama") : tfNamew.getText();
            String jabatan = cbOcc.getSelectedIndex() == 0 ? rs.getString("jabatan") : cbOcc.getSelectedItem().toString();
            String departemen = cbDepart.getSelectedIndex() == 0 ? rs.getString("departemen") : cbDepart.getSelectedItem().toString();
            String upsql = "UPDATE karyawan SET nama = ?, jabatan = ?, departemen = ? WHERE id = ?";
            PreparedStatement upps = conn.prepareStatement(upsql);
            upps.setString(1, nama);
            upps.setString(2, jabatan);
            upps.setString(3, departemen);
            upps.setInt(4, Integer.parseInt(tfIdw.getText()));
            upps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data saved successfully");
            loadDataK();
            IdWork();
        } catch (SQLException e) {
            System.out.println("Error updating data: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnUpdWActionPerformed

    private void btnUpdPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdPActionPerformed
    if (tblProj.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    }else{
        try {
            String sql = "SELECT nama_proyek, durasi_pengerjaan FROM proyek WHERE id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(tfIdp.getText()));
            ResultSet rs = ps.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            String proname = tfProname.getText().isEmpty() ? rs.getString("nama_proyek") : tfProname.getText();
            String duration = tfDuration.getText().isEmpty() ? rs.getString("durasi_pengerjaan") : tfDuration.getText();
            String upsql = "UPDATE proyek SET nama_proyek = ?, durasi_pengerjaan = ? WHERE id = ?";
            PreparedStatement upps = conn.prepareStatement(upsql);
            upps.setString(1, proname);
            upps.setString(2, duration);
            upps.setInt(3, Integer.parseInt(tfIdp.getText()));
            upps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data saved successfully");
            loadDataK();
            IdProj();
    } catch (SQLException e) {
        System.out.println("Error updating data: " + e.getMessage());
    }
        }
    }//GEN-LAST:event_btnUpdPActionPerformed

    private void btnUpdTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdTActionPerformed
     if (tblTrans.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
    }else{
         try {
            String sql = "SELECT peran FROM transaksi WHERE id_karyawan = ? AND id_proyek = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, cbWork.getSelectedItem().toString());
            ps.setString(2, cbProj.getSelectedItem().toString());
            ResultSet rs = ps.executeQuery();

            if (!rs.next()) {
                JOptionPane.showMessageDialog(this, "THERE IS NO DATA", "DISCLAIMER !!!", JOptionPane.WARNING_MESSAGE);
                return;
            }

            String role = tfRole.getText().isEmpty() ? rs.getString("peran") : tfRole.getText();
            String upsql = "UPDATE transaksi SET peran = ? WHERE id_karyawan = ? AND id_proyek = ?";
            PreparedStatement upps = conn.prepareStatement(upsql);
            upps.setString(1, role);
            upps.setString(2, cbWork.getSelectedItem().toString());
            upps.setString(3, cbProj.getSelectedItem().toString());
            upps.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data saved successfully");
            loadDataT();
    } catch (SQLException e) {
        System.out.println("Error updating data: " + e.getMessage());
    }
     }
    }//GEN-LAST:event_btnUpdTActionPerformed

    private void btnDelWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelWActionPerformed
try  {
            String sql = "DELETE FROM karyawan WHERE id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(tfIdw.getText()));
            ps.executeUpdate();
            conn.prepareStatement("SET @count = 0;").execute();
            conn.prepareStatement("UPDATE karyawan SET id = @count := @count + 1;").executeUpdate();
            conn.prepareStatement("ALTER TABLE karyawan AUTO_INCREMENT = 1;").execute();
            JOptionPane.showMessageDialog(this, "Data deleted successfully");
            loadDataK();
            IdWork();
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
}
    }//GEN-LAST:event_btnDelWActionPerformed

    private void btnDelPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelPActionPerformed
        try  {
            String sql = "DELETE FROM proyek WHERE id = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(tfIdp.getText()));
            ps.executeUpdate();
            conn.prepareStatement("SET @count = 0;").execute();
            conn.prepareStatement("UPDATE proyek SET id = @count := @count + 1;").executeUpdate();
            conn.prepareStatement("ALTER TABLE proyek AUTO_INCREMENT = 1;").execute();
            JOptionPane.showMessageDialog(this, "Data deleted successfully");
            loadDataP();
            IdProj();
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
        }
    }//GEN-LAST:event_btnDelPActionPerformed

    private void btnDelTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelTActionPerformed
        try  {
            String sql = "DELETE FROM transaksi WHERE id_proyek = ? AND id_karyawan = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(cbProj.getSelectedItem().toString()));
            ps.setInt(2, Integer.parseInt(cbWork.getSelectedItem().toString()));
            ps.executeUpdate();
            conn.prepareStatement("SET @count = 0;").execute();
            conn.prepareStatement("UPDATE transaksi SET id_karyawan = @count := @count + 1, id_proyek = @count := @count + 1;").executeUpdate();
            conn.prepareStatement("ALTER TABLE proyek AUTO_INCREMENT = 1;").execute();
            JOptionPane.showMessageDialog(this, "Data deleted successfully");
            loadDataT();
        } catch (SQLException e) {
            System.out.println("Error Save Data" + e.getMessage());
        }
    }//GEN-LAST:event_btnDelTActionPerformed

    private void btnClearWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearWActionPerformed
        tfIdw.setText("");
        tfNamew.setText("");
        cbOcc.setSelectedIndex(0);
        cbDepart.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearWActionPerformed

    private void btnClearPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearPActionPerformed
        tfIdp.setText("");
        tfProname.setText("");
        tfDuration.setText("");
    }//GEN-LAST:event_btnClearPActionPerformed

    private void btnClearTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTActionPerformed
        cbWork.setSelectedItem(0);
        cbProj.setSelectedItem(0);
    }//GEN-LAST:event_btnClearTActionPerformed

    private void btnExitWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitWActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitWActionPerformed

    private void btnExitPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitPActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitPActionPerformed

    private void btnExitTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitTActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitTActionPerformed

    private void cbOccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOccActionPerformed
    String occupation =  String.valueOf(CRUD.cbOcc.getSelectedItem());        
    String department =  String.valueOf(CRUD.cbDepart.getSelectedItem());
    

    if(occupation.equals("Full Stack Developer") || occupation.equals("DevOps Engineer")){
        if(department.equals("Maintenance Management")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Information Technology !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }else if(department.equals("Asset Management")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Information Technology !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }
    }else if(occupation.equals("Server Maintenance") || occupation.equals("Hardware Maintenance")){
        if(department.equals("Information Technology")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Maintenance Management !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }else if(department.equals("Asset Management")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Maintenance Management !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }
    }else if(occupation.equals("Risk Management") || occupation.equals("Senior Asset Management")){
         if(department.equals("Maintenance Management")){
             JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Asset Management !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }else if(department.equals("Information Technology")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR DEPARTMENT, U're in Asset Management !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbOcc.setSelectedIndex(0);
        }
    }
    }//GEN-LAST:event_cbOccActionPerformed

    private void cbDepartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbDepartActionPerformed
    String occupation =  String.valueOf(CRUD.cbOcc.getSelectedItem());        
    String department =  String.valueOf(CRUD.cbDepart.getSelectedItem());
    
    if(department.equals("Information Technology")){
        if(occupation.equals("Server Maintenance")|| occupation.equals("Hardware Maintenance") || occupation.equals("Risk Management") || occupation.equals("Senior Asset Management")){
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR OCCUPATION, U're occupation is Full Stack Developer/DevOps Engineer !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbDepart.setSelectedIndex(0);
        }
    }else if(department.equals("Maintenance Management")){
        if(occupation.equals("Full Stack Developer")|| occupation.equals("DevOps Engineer") || occupation.equals("Risk Management") || occupation.equals("Senior Asset Management")){
           cbDepart.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this,"THIS IS NOT UR OCCUPATION, U're occupation is Server Maintenance/Hardware Maintenance !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
        }
    }else if(department.equals("Asset Management")){
        if(occupation.equals("Full Stack Developer")|| occupation.equals("DevOps Engineer") || occupation.equals("Server Maintenance") || occupation.equals("Hardware Maintenance")){
           JOptionPane.showMessageDialog(this,"THIS IS NOT UR OCCUPATION, U're occupation is Risk Management/Senior Asset Management !!!","DISCLAIMER", JOptionPane.WARNING_MESSAGE);
           cbDepart.setSelectedIndex(0);        
        }
    }
    }//GEN-LAST:event_cbDepartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane5;
    private javax.swing.JLabel Lpron2;
    private javax.swing.JPanel PANELbtnp1;
    private javax.swing.JPanel PANELbtnp2;
    private javax.swing.JPanel PANELbtnt1;
    private javax.swing.JPanel PANELbtnt4;
    private javax.swing.JPanel PANELbtnw1;
    private javax.swing.JPanel PANELbtnw2;
    private javax.swing.JPanel Project;
    private javax.swing.JPanel TITLEP;
    private javax.swing.JPanel TITLET;
    private javax.swing.JPanel TITLEW;
    private javax.swing.JTabbedPane TabPane;
    private javax.swing.JPanel Transaction;
    private javax.swing.JPanel Workers;
    private javax.swing.JButton btnAddP;
    private javax.swing.JButton btnAddT;
    private javax.swing.JButton btnAddW;
    private javax.swing.JButton btnClearP;
    private javax.swing.JButton btnClearT;
    private javax.swing.JButton btnClearW;
    private javax.swing.JButton btnDelP;
    private javax.swing.JButton btnDelT;
    private javax.swing.JButton btnDelW;
    private javax.swing.JButton btnExitP;
    private javax.swing.JButton btnExitT;
    private javax.swing.JButton btnExitW;
    private javax.swing.JButton btnUpdP;
    private javax.swing.JButton btnUpdT;
    private javax.swing.JButton btnUpdW;
    private static javax.swing.JComboBox<String> cbDepart;
    private static javax.swing.JComboBox<String> cbOcc;
    private javax.swing.JComboBox<String> cbProj;
    private javax.swing.JComboBox<String> cbWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lDepartment;
    private javax.swing.JLabel lDuration;
    private javax.swing.JLabel lIdW;
    private javax.swing.JLabel lInput;
    private javax.swing.JLabel lInput1;
    private javax.swing.JLabel lInput2;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel lOccupation;
    private javax.swing.JLabel lProname;
    private javax.swing.JLabel lRole;
    private javax.swing.JLabel lTitlep;
    private javax.swing.JLabel lTitlet;
    private javax.swing.JLabel lTitlew;
    private javax.swing.JLabel lidW;
    private javax.swing.JLabel lidp;
    private javax.swing.JLabel picp1;
    private javax.swing.JLabel picp2;
    private javax.swing.JLabel picw1;
    private javax.swing.JLabel picw2;
    private javax.swing.JPanel pnlW;
    private javax.swing.JPanel pnlW1;
    private javax.swing.JPanel pnlW2;
    private javax.swing.JTable tblProj;
    private javax.swing.JTable tblTrans;
    private javax.swing.JTable tblWork;
    private javax.swing.JTextField tfDuration;
    private javax.swing.JTextField tfIdp;
    private javax.swing.JTextField tfIdw;
    private javax.swing.JTextField tfNamew;
    private javax.swing.JTextField tfProname;
    private javax.swing.JTextField tfRole;
    // End of variables declaration//GEN-END:variables
}
