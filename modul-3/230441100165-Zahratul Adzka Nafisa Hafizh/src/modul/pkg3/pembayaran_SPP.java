/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modul.pkg3;

import javax.swing.JOptionPane;

/**
 *
 * @author SMK_BIM
 */
public class pembayaran_SPP extends javax.swing.JFrame {

    /**
     * Creates new form pembayaran_SPP
     */
    public pembayaran_SPP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jCheckBox4 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbnama = new javax.swing.JLabel();
        lbspp = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        cbjanuari = new javax.swing.JCheckBox();
        cbfebruari = new javax.swing.JCheckBox();
        cbapril = new javax.swing.JCheckBox();
        cbmaret = new javax.swing.JCheckBox();
        cbmei = new javax.swing.JCheckBox();
        cbjuni = new javax.swing.JCheckBox();
        cbjuli = new javax.swing.JCheckBox();
        cbagustus = new javax.swing.JCheckBox();
        cbseptember = new javax.swing.JCheckBox();
        cboktober = new javax.swing.JCheckBox();
        cbnovember = new javax.swing.JCheckBox();
        cbdesember = new javax.swing.JCheckBox();
        lbbulan = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreariwayat = new javax.swing.JTextArea();
        lbriwayatpembayaran = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btstatus = new javax.swing.JButton();
        bthitung = new javax.swing.JButton();
        txtnama = new javax.swing.JTextField();
        lblogo = new javax.swing.JLabel();
        btnbayar = new javax.swing.JButton();
        txtspp = new javax.swing.JTextField();
        btReset = new javax.swing.JButton();

        jCheckBox4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(204, 210, 173));
        jCheckBox4.setText("Mei");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.setLayout(new java.awt.GridLayout(2, 0));

        lbnama.setBackground(new java.awt.Color(255, 255, 255));
        lbnama.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        lbnama.setForeground(new java.awt.Color(224, 210, 145));
        lbnama.setText("   Nama Siswa:");
        jPanel2.add(lbnama);

        lbspp.setBackground(new java.awt.Color(255, 255, 255));
        lbspp.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        lbspp.setForeground(new java.awt.Color(224, 210, 145));
        lbspp.setText("   Jumlah SPP/Bulan(Rp):");
        lbspp.setToolTipText("");
        lbspp.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel2.add(lbspp);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 10, 270, 70));

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));
        jPanel3.setLayout(new java.awt.GridLayout(4, 3));

        cbjanuari.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbjanuari.setForeground(new java.awt.Color(204, 210, 173));
        cbjanuari.setText("Januari");
        jPanel3.add(cbjanuari);

        cbfebruari.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbfebruari.setForeground(new java.awt.Color(204, 210, 173));
        cbfebruari.setText("Februari");
        jPanel3.add(cbfebruari);

        cbapril.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbapril.setForeground(new java.awt.Color(204, 210, 173));
        cbapril.setText("April");
        jPanel3.add(cbapril);

        cbmaret.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbmaret.setForeground(new java.awt.Color(204, 210, 173));
        cbmaret.setText("Maret");
        jPanel3.add(cbmaret);

        cbmei.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbmei.setForeground(new java.awt.Color(204, 210, 173));
        cbmei.setText("Mei");
        jPanel3.add(cbmei);

        cbjuni.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbjuni.setForeground(new java.awt.Color(204, 210, 173));
        cbjuni.setText("Juni");
        jPanel3.add(cbjuni);

        cbjuli.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbjuli.setForeground(new java.awt.Color(204, 210, 173));
        cbjuli.setText("Juli");
        jPanel3.add(cbjuli);

        cbagustus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbagustus.setForeground(new java.awt.Color(204, 210, 173));
        cbagustus.setText("Agustus");
        jPanel3.add(cbagustus);

        cbseptember.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbseptember.setForeground(new java.awt.Color(204, 210, 173));
        cbseptember.setText("September");
        jPanel3.add(cbseptember);

        cboktober.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cboktober.setForeground(new java.awt.Color(204, 210, 173));
        cboktober.setText("Oktober");
        jPanel3.add(cboktober);

        cbnovember.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbnovember.setForeground(new java.awt.Color(204, 210, 173));
        cbnovember.setText("November");
        jPanel3.add(cbnovember);

        cbdesember.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbdesember.setForeground(new java.awt.Color(204, 210, 173));
        cbdesember.setText("Desember");
        jPanel3.add(cbdesember);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, 270, 190));

        lbbulan.setFont(new java.awt.Font("Sylfaen", 1, 36)); // NOI18N
        lbbulan.setForeground(new java.awt.Color(224, 210, 145));
        lbbulan.setText(" Bulan:");
        jPanel1.add(lbbulan, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, -1, -1));

        txtAreariwayat.setEditable(false);
        txtAreariwayat.setBackground(new java.awt.Color(225, 220, 179));
        txtAreariwayat.setColumns(20);
        txtAreariwayat.setForeground(new java.awt.Color(0, 153, 51));
        txtAreariwayat.setRows(5);
        jScrollPane1.setViewportView(txtAreariwayat);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 520, 80));

        lbriwayatpembayaran.setBackground(new java.awt.Color(204, 204, 255));
        lbriwayatpembayaran.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        lbriwayatpembayaran.setForeground(new java.awt.Color(224, 210, 145));
        lbriwayatpembayaran.setText("Riwayat Pembayaran:");
        jPanel1.add(lbriwayatpembayaran, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 310, -1, 30));

        jPanel4.setBackground(new java.awt.Color(0, 51, 102));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        btstatus.setBackground(new java.awt.Color(225, 220, 179));
        btstatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btstatus.setText("Status Pembayaran");
        btstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btstatusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 5;
        jPanel4.add(btstatus, gridBagConstraints);

        bthitung.setBackground(new java.awt.Color(0, 0, 0));
        bthitung.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bthitung.setForeground(new java.awt.Color(204, 210, 173));
        bthitung.setText("Hitung Pembayaran");
        bthitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthitungActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 12;
        jPanel4.add(bthitung, gridBagConstraints);

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 280, 160, 60));

        txtnama.setBackground(new java.awt.Color(225, 220, 179));
        jPanel1.add(txtnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, 270, 35));

        lblogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/modul/pkg3/logo_sekolah-removebg-preview.png"))); // NOI18N
        jPanel1.add(lblogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 50, 350, 320));

        btnbayar.setBackground(new java.awt.Color(0, 0, 0));
        btnbayar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnbayar.setForeground(new java.awt.Color(204, 210, 173));
        btnbayar.setText("BAYAR");
        btnbayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbayarActionPerformed(evt);
            }
        });
        jPanel1.add(btnbayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 280, 100, 60));

        txtspp.setBackground(new java.awt.Color(225, 220, 179));
        jPanel1.add(txtspp, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 50, 270, 30));

        btReset.setBackground(new java.awt.Color(225, 220, 179));
        btReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btReset.setText("RESET");
        btReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResetActionPerformed(evt);
            }
        });
        jPanel1.add(btReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 858, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btstatusActionPerformed
        // TODO add your handling code here:
if(txtAreariwayat.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Silahkan Hitung Total Terlebih Dahulu.", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Keluar dari metode jika input tidak valid
}else{
    String status = "Lunas";
    String bulanBelumDibayar = "";

    // Cek status setiap checkbox untuk bulan
    if (!cbjanuari.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Januari\n";
    }
    if (!cbfebruari.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Februari\n";
    }
    if (!cbmaret.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Maret\n";
    }
    if (!cbapril.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "April\n";
    }
    if (!cbmei.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Mei\n";
    }
    if (!cbjuni.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Juni\n";
    }
    if (!cbjuli.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Juli\n";
    }
    if (!cbagustus.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Agustus\n";
    }
    if (!cbseptember.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "September\n";
    }
    if (!cboktober.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Oktober\n";
    }
    if (!cbnovember.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "November\n";
    }
    if (!cbdesember.isSelected()) {
        status = "Menunggak";
        bulanBelumDibayar = bulanBelumDibayar + "Desember\n";
    }

    // Tampilkan status dan daftar bulan yang belum dibayar
    if (status.equals("Menunggak")) {
        JOptionPane.showMessageDialog(this,"Status: " + status + "\nBulan yang belum dibayar:\n" + bulanBelumDibayar);
    } else {
        JOptionPane.showMessageDialog(this,"Status: " + status + "\nSemua bulan telah dibayar.");
    }
}
    }//GEN-LAST:event_btstatusActionPerformed

    private void bthitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthitungActionPerformed
        // TODO add your handling code here:
    //muncul diriwayat pembayaran
    // Ambil nama siswa dan jumlah SPP per bulan dari input
    String namaSiswa = txtnama.getText();
    String jumlahSPPStr = txtspp.getText();

    // Validasi jumlah SPP
    if (jumlahSPPStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Silakan masukkan jumlah SPP per bulan.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    double jumlahSPP = Double.parseDouble(jumlahSPPStr);
    double totalPembayaran = 0;
    String pembayaranDetail = "Detail Pembayaran untuk " + namaSiswa + ":\n";

    // Hitung total pembayaran berdasarkan checkbox yang dipilih
    if (cbjanuari.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Januari: " + jumlahSPP + "\n";
    }
    if (cbfebruari.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Februari: " + jumlahSPP + "\n";
    }
    if (cbmaret.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Maret: " + jumlahSPP + "\n";
    }
    if (cbapril.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "April: " + jumlahSPP + "\n";
    }
    if (cbmei.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Mei: " + jumlahSPP + "\n";
    }
    if (cbjuni.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Juni: " + jumlahSPP + "\n";
    }
    if (cbjuli.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Juli: " + jumlahSPP + "\n";
    }
    if (cbagustus.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Agustus: " + jumlahSPP + "\n";
    }
    if (cbseptember.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "September: " + jumlahSPP + "\n";
    }
    if (cboktober.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Oktober: " + jumlahSPP + "\n";
    }
    if (cbnovember.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "November: " + jumlahSPP + "\n";
    }
    if (cbdesember.isSelected()) {
        totalPembayaran += jumlahSPP;
        pembayaranDetail = pembayaranDetail + "Desember: " + jumlahSPP + "\n";
    }

    // Menampilkan total pembayaran dan detail di JTextArea
    pembayaranDetail = pembayaranDetail + "Total Pembayaran: " + totalPembayaran + "\n";
    txtAreariwayat.setText(pembayaranDetail);
    }//GEN-LAST:event_bthitungActionPerformed

    private void btnbayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbayarActionPerformed
        // TODO add your handling code here:        
    
    // Menanyakan jumlah yang ingin dibayarkan menggunakan JOptionPane input
    double jumlahSPP = Double.parseDouble(txtspp.getText());
    double totalPembayaran = 0;
    double totalTunggakan = 0;
    String bulanBelumDibayar = "";
    boolean semuaLunas = true; // Menyimpan status semua bulan
    boolean adaBulanDipilih = false; // Menandai jika ada bulan yang dipilih
if(txtAreariwayat.getText().isEmpty()){
    JOptionPane.showMessageDialog(this, "Silahkan Hitung Total Terlebih Dahulu.", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Keluar dari metode jika input tidak valid
}else{
    // Cek setiap bulan dan hitung total pembayaran
    if (!cbjanuari.isSelected()) {
        bulanBelumDibayar += "Januari\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbjanuari.setSelected(true); // Tandai sebagai lunas
        adaBulanDipilih = true; // Setidaknya satu bulan dipilih
    }

    if (!cbfebruari.isSelected()) {
        bulanBelumDibayar += "Februari\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbfebruari.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbmaret.isSelected()) {
        bulanBelumDibayar += "Maret\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbmaret.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbapril.isSelected()) {
        bulanBelumDibayar += "April\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbapril.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbmei.isSelected()) {
        bulanBelumDibayar += "Mei\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbmei.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbjuni.isSelected()) {
        bulanBelumDibayar += "Juni\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbjuni.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbjuli.isSelected()) {
        bulanBelumDibayar += "Juli\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbjuli.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbagustus.isSelected()) {
        bulanBelumDibayar += "Agustus\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbagustus.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbseptember.isSelected()) {
        bulanBelumDibayar += "September\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbseptember.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cboktober.isSelected()) {
        bulanBelumDibayar += "Oktober\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cboktober.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbnovember.isSelected()) {
        bulanBelumDibayar += "November\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbnovember.setSelected(true);
        adaBulanDipilih = true;
    }

    if (!cbdesember.isSelected()) {
        bulanBelumDibayar += "Desember\n";
        totalTunggakan += jumlahSPP;
        semuaLunas = false;
    } else {
        totalPembayaran += jumlahSPP;
        cbdesember.setSelected(true);
        adaBulanDipilih = true;
    }

    // Jika tidak ada bulan yang dipilih
    if (!adaBulanDipilih) {
        JOptionPane.showMessageDialog(this, "Silahkan pilih bulan untuk dibayar");
    } else {
        String jumlahSPPStr = JOptionPane.showInputDialog(this, "Masukkan jumlah yang ingin dibayarkan:");

        // Validasi input
        if (jumlahSPPStr == null || jumlahSPPStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan total yang harus dibayarkan.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Keluar dari metode jika input tidak valid
        }

        // Mengonversi input ke integer setelah validasi
        int bayar = Integer.parseInt(jumlahSPPStr);

        // Validasi jumlah SPP
        if (bayar < totalPembayaran) {
            JOptionPane.showMessageDialog(this, "Uang Anda Kurang Pembayaran Gagal", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (bayar > totalPembayaran) {
            double hasil = bayar - totalPembayaran;
            JOptionPane.showMessageDialog(this, "Kembalian anda adalah Rp." + hasil, "Message", JOptionPane.INFORMATION_MESSAGE);
            }else if (bayar > totalPembayaran){ 
            JOptionPane.showMessageDialog(this, "Uang anda Pas ", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
            double sisaTunggakan = totalTunggakan ;
            JOptionPane.showMessageDialog(this, "Total yang harus dibayar: " + (totalTunggakan+totalPembayaran) + 
            "\nAnda sudah Membayar : " + totalPembayaran + 
            "\nMasih ada tunggakan sebesar: " + sisaTunggakan + 
            "\nBulan yang belum dibayar:\n" + bulanBelumDibayar, 
            "Pembayaran Bulan", JOptionPane.INFORMATION_MESSAGE);
            
            if(totalTunggakan==0){
                
            }else{
            int option = JOptionPane.showConfirmDialog(this, "Apakah Anda ingin membayar sisa tunggakan?", 
                    "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                String sisaBayarStr = JOptionPane.showInputDialog(this, "Masukkan jumlah sisa yang ingin dibayar:"+sisaTunggakan);
                int sisa = Integer.parseInt(sisaBayarStr);
                
                if (sisaBayarStr == null && sisaBayarStr.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Silakan masukkan total yang harus dibayarkan.", "Error", JOptionPane.ERROR_MESSAGE);
                    return; // Keluar dari metode jika input tidak valid
                }else{
                    double sisaBayar = Double.parseDouble(sisaBayarStr);
                    
                    if (sisaBayar >= sisaTunggakan) {
                        JOptionPane.showMessageDialog(this, "Pembayaran sisa tunggakan berhasil. Total pembayaran lunas. Dibayarkan sebesar :"+sisaBayar, 
                                "Pembayaran Lunas", JOptionPane.INFORMATION_MESSAGE);
                        txtAreariwayat.setText(txtAreariwayat.getText() + "\nLunas: " + bulanBelumDibayar + "Total Pembayaran: " + totalTunggakan);
                        cbjanuari.setSelected(true);
                        cbfebruari.setSelected(true);
                        cbmaret.setSelected(true);
                        cbapril.setSelected(true);
                        cbmei.setSelected(true);
                        cbjuni.setSelected(true);
                        cbjuli.setSelected(true);
                        cbagustus.setSelected(true);
                        cbseptember.setSelected(true);
                        cboktober.setSelected(true);
                        cbnovember.setSelected(true);
                        cbdesember.setSelected(true);
                    } else {
                        JOptionPane.showMessageDialog(this, "Jumlah yang dimasukkan kurang dari sisa tunggakan. Pembayaran dibatalkan.", 
                                "Pembayaran Gagal", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else{
                txtAreariwayat.setText(txtAreariwayat.getText() + "\nLunas: ");
            }
        }
        }
    }
}
   
    }//GEN-LAST:event_btnbayarActionPerformed

    private void btResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResetActionPerformed
        // TODO add your handling code here:
        txtnama.setText("");
        txtspp.setText("");
        cbjanuari.setSelected(false);
        cbfebruari.setSelected(false);
        cbmaret.setSelected(false);
        cbapril.setSelected(false);
        cbmei.setSelected(false);
        cbjuni.setSelected(false);
        cbjuli.setSelected(false);
        cbagustus.setSelected(false);
        cbseptember.setSelected(false);
        cboktober.setSelected(false);
        cbnovember.setSelected(false);
        cbdesember.setSelected(false);
        txtAreariwayat.setText("");

    }//GEN-LAST:event_btResetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pembayaran_SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pembayaran_SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pembayaran_SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pembayaran_SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pembayaran_SPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btReset;
    private javax.swing.JButton bthitung;
    private javax.swing.JButton btnbayar;
    private javax.swing.JButton btstatus;
    private javax.swing.JCheckBox cbagustus;
    private javax.swing.JCheckBox cbapril;
    private javax.swing.JCheckBox cbdesember;
    private javax.swing.JCheckBox cbfebruari;
    private javax.swing.JCheckBox cbjanuari;
    private javax.swing.JCheckBox cbjuli;
    private javax.swing.JCheckBox cbjuni;
    private javax.swing.JCheckBox cbmaret;
    private javax.swing.JCheckBox cbmei;
    private javax.swing.JCheckBox cbnovember;
    private javax.swing.JCheckBox cboktober;
    private javax.swing.JCheckBox cbseptember;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbbulan;
    private javax.swing.JLabel lblogo;
    private javax.swing.JLabel lbnama;
    private javax.swing.JLabel lbriwayatpembayaran;
    private javax.swing.JLabel lbspp;
    private javax.swing.JTextArea txtAreariwayat;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txtspp;
    // End of variables declaration//GEN-END:variables
}
