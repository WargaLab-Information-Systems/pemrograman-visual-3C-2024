/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pemvis_modul3;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class SPP extends javax.swing.JFrame {

    /**
     * Creates new form SPP
     */
    public SPP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        rb1 = new javax.swing.JCheckBox();
        rb2 = new javax.swing.JCheckBox();
        rb3 = new javax.swing.JCheckBox();
        rb4 = new javax.swing.JCheckBox();
        rb5 = new javax.swing.JCheckBox();
        rb6 = new javax.swing.JCheckBox();
        rb7 = new javax.swing.JCheckBox();
        rb8 = new javax.swing.JCheckBox();
        rb9 = new javax.swing.JCheckBox();
        rb10 = new javax.swing.JCheckBox();
        rb11 = new javax.swing.JCheckBox();
        rb12 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        btnstatus = new javax.swing.JButton();
        btnbayar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtbayar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabel1 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtnama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtjumlah = new javax.swing.JTextField();
        btnriset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txttotal = new javax.swing.JTextField();
        btntotal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 102, 102));
        jPanel3.setLayout(new java.awt.GridLayout(3, 12));

        rb1.setText("Januari");
        jPanel3.add(rb1);

        rb2.setText("Februari");
        jPanel3.add(rb2);

        rb3.setText("Maret");
        jPanel3.add(rb3);

        rb4.setText("April");
        jPanel3.add(rb4);

        rb5.setText("Mei");
        jPanel3.add(rb5);

        rb6.setText("Juni");
        jPanel3.add(rb6);

        rb7.setText("Juli");
        jPanel3.add(rb7);

        rb8.setText("Agustus");
        jPanel3.add(rb8);

        rb9.setText("September");
        jPanel3.add(rb9);

        rb10.setText("Oktober");
        jPanel3.add(rb10);

        rb11.setText("November");
        jPanel3.add(rb11);

        rb12.setText("Desember");
        rb12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb12ActionPerformed(evt);
            }
        });
        jPanel3.add(rb12);

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 330, 130));

        jPanel4.setLayout(new java.awt.GridBagLayout());

        btnstatus.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnstatus.setText("Status Pembayaran");
        btnstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstatusActionPerformed(evt);
            }
        });
        jPanel4.add(btnstatus, new java.awt.GridBagConstraints());

        btnbayar.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnbayar.setText("BAYAR ");
        btnbayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbayarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel4.add(btnbayar, gridBagConstraints);

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 140, 50));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setText("RIWAYAT PEMBAYARAN :");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel3.setText("BAYAR :");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));
        jPanel2.add(txtbayar, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 120, -1));

        tabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Bulan DiBayar", "Status", "Total"
            }
        ));
        jScrollPane2.setViewportView(tabel1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 405, 290));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel5.setText("NAMA SISWA :");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        txtnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnamaActionPerformed(evt);
            }
        });
        jPanel2.add(txtnama, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 260, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel2.setText("Jumlah SPP/Bulan(Rp) :");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));
        jPanel2.add(txtjumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 210, -1));

        btnriset.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btnriset.setText("RISET");
        btnriset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrisetActionPerformed(evt);
            }
        });
        jPanel2.add(btnriset, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jLabel4.setText("TOTAL :");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        txttotal.setEditable(false);
        jPanel2.add(txttotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 270, -1));

        btntotal.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        btntotal.setText("TOTAL");
        btntotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntotalActionPerformed(evt);
            }
        });
        jPanel2.add(btntotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 70, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstatusActionPerformed
        // TODO add your handling code here:
         if (tabel1.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Silahkan Bayar Terlebih Dahulu.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Keluar dari metode jika tabel kosong
        }else{
            String status = "Lunas";
            String bulanBelumDibayar = "";

            // Cek status setiap checkbox untuk bulan
            if (!rb1.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Januari\n";
            }
            if (!rb2.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Februari\n";
            }
            if (!rb3.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Maret\n";
            }
            if (!rb4.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "April\n";
            }
            if (!rb5.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Mei\n";
            }
            if (!rb6.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Juni\n";
            }
            if (!rb7.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Juli\n";
            }
            if (!rb8.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Agustus\n";
            }
            if (!rb9.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "September\n";
            }
            if (!rb10.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Oktober\n";
            }
            if (!rb11.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "November\n";
            }
            if (!rb12.isSelected()) {
                status = "Menunggak";
                bulanBelumDibayar = bulanBelumDibayar + "Desember\n";
            }

            // Tampilkan status dan daftar bulan yang belum dibayar
            if (status.equals("Menunggak")) {
                JOptionPane.showMessageDialog(this,"Status: " + status + "\nBulan yang belum dibayar:\n" + bulanBelumDibayar);
            } else {
                JOptionPane.showMessageDialog(this,"Status: " + status + "\nSemua bulan telah dibayar.");
            }
        }                                
    }//GEN-LAST:event_btnstatusActionPerformed

    private void btnrisetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrisetActionPerformed
        // TODO add your handling code here:  
        txtnama.setText("");
        txttotal.setText("");
        txtjumlah.setText("");
        txtbayar.setText("");

        // Uncheck semua checkbox bulan
        rb1.setSelected(false);
        rb2.setSelected(false);
        rb3.setSelected(false);
        rb4.setSelected(false);
        rb5.setSelected(false);
        rb6.setSelected(false);
        rb7.setSelected(false);
        rb8.setSelected(false);
        rb9.setSelected(false);
        rb10.setSelected(false);
        rb11.setSelected(false);
        rb12.setSelected(false);

        // Fokuskan kembali pada field nama agar pengguna dapat mulai mengisi dari awal
        txtnama.requestFocus();                               
    }//GEN-LAST:event_btnrisetActionPerformed

    private void btnbayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbayarActionPerformed
        // TODO add your handling code here:
    DefaultTableModel model = (DefaultTableModel) tabel1.getModel();
    String bulanDetail = "";
    int bulanTerpilih = 0;

if (txtnama.getText().isEmpty() || txtjumlah.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "Pastikan semua field sudah diisi!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

String nama = txtnama.getText();
String totalPembayaranText = txttotal.getText();
int jumlah = Integer.parseInt(txtjumlah.getText());

// Check which months are selected
if (rb1.isSelected()) { bulanDetail += "Januari, "; bulanTerpilih++; }
if (rb2.isSelected()) { bulanDetail += "Februari, "; bulanTerpilih++; }
if (rb3.isSelected()) { bulanDetail += "Maret, "; bulanTerpilih++; }
if (rb4.isSelected()) { bulanDetail += "April, "; bulanTerpilih++; }
if (rb5.isSelected()) { bulanDetail += "Mei, "; bulanTerpilih++; }
if (rb6.isSelected()) { bulanDetail += "Juni, "; bulanTerpilih++; }
if (rb7.isSelected()) { bulanDetail += "Juli, "; bulanTerpilih++; }
if (rb8.isSelected()) { bulanDetail += "Agustus, "; bulanTerpilih++; }
if (rb9.isSelected()) { bulanDetail += "September, "; bulanTerpilih++; }
if (rb10.isSelected()) { bulanDetail += "Oktober, "; bulanTerpilih++; }
if (rb11.isSelected()) { bulanDetail += "November, "; bulanTerpilih++; }
if (rb12.isSelected()) { bulanDetail += "Desember, "; bulanTerpilih++; }
// Repeat for other months...

if (bulanTerpilih == 0) {
    JOptionPane.showMessageDialog(this, "Pilih minimal satu bulan!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Remove trailing comma
if (!bulanDetail.isEmpty()) {
    bulanDetail = bulanDetail.substring(0, bulanDetail.length() - 2);
}

int totalPembayaran;
try {
    totalPembayaran = Integer.parseInt(totalPembayaranText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Total pembayaran harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

String jumlahUangText = txtbayar.getText();
int jumlahUang;
try {
    jumlahUang = Integer.parseInt(jumlahUangText);
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "Jumlah uang yang dimasukkan harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Determine status
String status = (bulanTerpilih < 12) ? "Nunggak" : "Lunas";

// Check existing rows in table
boolean namaSama = false, bulanSama = false, totalSama = false;

for (int i = 0; i < model.getRowCount(); i++) {
    String namaDiTabel = (String) model.getValueAt(i, 0);
    String bulanDiTabel = (String) model.getValueAt(i, 1);
    Object totalDiTabelObj = model.getValueAt(i, 3);
    int totalDiTabel = (totalDiTabelObj != null) ? (int) totalDiTabelObj : 0;

    if (nama.equals(namaDiTabel)) {
        namaSama = true;
        if (bulanDetail.equals(bulanDiTabel)) bulanSama = true;
        if (totalPembayaran == totalDiTabel) totalSama = true;
    }
}

if (namaSama && bulanSama && totalSama) {
    JOptionPane.showMessageDialog(this, "Nama, bulan, dan total tidak boleh sama dengan data yang sudah ada!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Update or add to table
if (namaSama) {
    for (int i = 0; i < model.getRowCount(); i++) {
        String namaDiTabel = (String) model.getValueAt(i, 0);
        if (nama.equals(namaDiTabel)) {
            model.setValueAt(bulanDetail, i, 1);
            model.setValueAt(status, i, 2);
            model.setValueAt(totalPembayaran, i, 3);
            break;
        }
    }
} else {
    model.addRow(new Object[]{nama, bulanDetail, status, totalPembayaran});
}

// Handle overpayment
if (jumlahUang > totalPembayaran) {
    int kembalian = jumlahUang - totalPembayaran;
    JOptionPane.showMessageDialog(this, "Pembayaran berhasil! Kembalian: " + kembalian, "Info", JOptionPane.INFORMATION_MESSAGE);
} else {
    JOptionPane.showMessageDialog(this, "Pembayaran berhasil! Uang pas.", "Info", JOptionPane.INFORMATION_MESSAGE);
}

    }//GEN-LAST:event_btnbayarActionPerformed

    private void txtnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnamaActionPerformed

    private void btntotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntotalActionPerformed
        // TODO add your handling code here:
        int totalPembayaran = 0;
        String bulanDetail = "";
        String jumlahstr = txtjumlah.getText().trim();
    if (txtnama.getText().isEmpty() || jumlahstr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Pastikan semua field (nama, bulan, Bayar dah Jumlah SPP nya) sudah diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
        String nama = txtnama.getText();
        int jumlah = Integer.parseInt( txtjumlah.getText());

        if (rb1.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Januari";
        }
        if (rb2.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Februari";
        }
        if (rb3.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Maret";
        }
        if (rb4.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "April";
        }
        if (rb5.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Mei";
        }
        if (rb6.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Juni";
        }
        if (rb7.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Juli";
        }
        if (rb8.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Agustus";
        }
        if (rb9.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "September";
        }
        if (rb10.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Oktober";
        }
        if (rb11.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "November";
        }
        if (rb12.isSelected()) {
            totalPembayaran += jumlah;
            bulanDetail += "Desember";
        }

//        // Menghapus koma terakhir jika ada bulan yang dipilih
        if (nama.isEmpty() || bulanDetail.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pastikan semua field (nama, bulan) sudah diisi!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            txttotal.setText(String.valueOf(totalPembayaran));
        }
                           
    }//GEN-LAST:event_btntotalActionPerformed

    private void rb12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rb12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbayar;
    private javax.swing.JButton btnriset;
    private javax.swing.JButton btnstatus;
    private javax.swing.JButton btntotal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox rb1;
    private javax.swing.JCheckBox rb10;
    private javax.swing.JCheckBox rb11;
    private javax.swing.JCheckBox rb12;
    private javax.swing.JCheckBox rb2;
    private javax.swing.JCheckBox rb3;
    private javax.swing.JCheckBox rb4;
    private javax.swing.JCheckBox rb5;
    private javax.swing.JCheckBox rb6;
    private javax.swing.JCheckBox rb7;
    private javax.swing.JCheckBox rb8;
    private javax.swing.JCheckBox rb9;
    private javax.swing.JTable tabel1;
    private javax.swing.JTextField txtbayar;
    private javax.swing.JTextField txtjumlah;
    private javax.swing.JTextField txtnama;
    private javax.swing.JTextField txttotal;
    // End of variables declaration//GEN-END:variables
}
