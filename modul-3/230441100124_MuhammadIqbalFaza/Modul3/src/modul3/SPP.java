/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package modul3;

import javax.swing.JCheckBox;
import javax.swing.JOptionPane;

/**
 *
 * @author faza
 */
public class SPP extends javax.swing.JFrame {
    boolean[] status = new boolean[12];
    JCheckBox[] bulan;
    /**
     * Creates new form SPP
     */
    public SPP() {
        initComponents();
        this.bulan = new JCheckBox[]{januariCheckBox,februariCheckBox,maretCheckBox,aprilCheckBox,meiCheckBox,juniCheckBox,juliCheckBox,agustusCheckBox,septemberCheckBox,novemberCheckBox,oktoberCheckBox,desemberCheckBox};
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnBayar = new javax.swing.JButton();
        btnHitungTotal = new javax.swing.JButton();
        btnRiwayatPembayaran = new javax.swing.JButton();
        namaField = new javax.swing.JTextField();
        nisnField = new javax.swing.JTextField();
        jurusanComboBox = new javax.swing.JComboBox<>();
        sppPerBulanField = new javax.swing.JTextField();
        januariCheckBox = new javax.swing.JCheckBox();
        februariCheckBox = new javax.swing.JCheckBox();
        maretCheckBox = new javax.swing.JCheckBox();
        aprilCheckBox = new javax.swing.JCheckBox();
        meiCheckBox = new javax.swing.JCheckBox();
        juniCheckBox = new javax.swing.JCheckBox();
        juliCheckBox = new javax.swing.JCheckBox();
        agustusCheckBox = new javax.swing.JCheckBox();
        septemberCheckBox = new javax.swing.JCheckBox();
        novemberCheckBox = new javax.swing.JCheckBox();
        oktoberCheckBox = new javax.swing.JCheckBox();
        desemberCheckBox = new javax.swing.JCheckBox();
        totalBayarField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(25, 72, 95));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(217, 224, 164));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Form Pembayaran SPP");
        jPanel1.add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBackground(new java.awt.Color(217, 224, 164));
        jPanel2.setForeground(new java.awt.Color(217, 224, 164));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Nama");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("NISN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setText("Jurusan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setText("SPP Per Bulan");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Bulan Yang Ingin Dibayar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel7.setText("Total yang harus dibayar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jLabel7, gridBagConstraints);

        btnBayar.setText("Bayar");
        btnBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(btnBayar, gridBagConstraints);

        btnHitungTotal.setText("Hitung Total");
        btnHitungTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungTotalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(btnHitungTotal, gridBagConstraints);

        btnRiwayatPembayaran.setText("Riwayat Pembayaran");
        btnRiwayatPembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRiwayatPembayaranActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.insets = new java.awt.Insets(16, 16, 16, 16);
        jPanel2.add(btnRiwayatPembayaran, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(namaField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(nisnField, gridBagConstraints);

        jurusanComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teknik Komputer Jaringan", "Teknik Kendaraan Ringan", "Teknik Mesin", "Teknik Sepedah Motor", "Tata Busana", "Multimedia" }));
        jurusanComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jurusanComboBoxActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(jurusanComboBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(sppPerBulanField, gridBagConstraints);

        januariCheckBox.setText("Januari");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(januariCheckBox, gridBagConstraints);

        februariCheckBox.setText("Februari");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(februariCheckBox, gridBagConstraints);

        maretCheckBox.setText("Maret");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(maretCheckBox, gridBagConstraints);

        aprilCheckBox.setText("April");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(aprilCheckBox, gridBagConstraints);

        meiCheckBox.setText("Mei");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(meiCheckBox, gridBagConstraints);

        juniCheckBox.setText("Juni");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(juniCheckBox, gridBagConstraints);

        juliCheckBox.setText("Juli");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(juliCheckBox, gridBagConstraints);

        agustusCheckBox.setText("Agustus");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(agustusCheckBox, gridBagConstraints);

        septemberCheckBox.setText("September");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(septemberCheckBox, gridBagConstraints);

        novemberCheckBox.setText("November");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(novemberCheckBox, gridBagConstraints);

        oktoberCheckBox.setText("Oktober");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(oktoberCheckBox, gridBagConstraints);

        desemberCheckBox.setText("Desember");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(desemberCheckBox, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        jPanel2.add(totalBayarField, gridBagConstraints);

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarActionPerformed
        // TODO add your handling code here:
        // Ambil data dari input
        String nama = namaField.getText();
        String nisn = nisnField.getText();
        String jurusan = (String) jurusanComboBox.getSelectedItem();
        String sppPerBulanStr = sppPerBulanField.getText();
        String totalBayarStr = totalBayarField.getText();

        // Cek jika data masih ada yang kosong
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (nisn.isEmpty()) {
            JOptionPane.showMessageDialog(this, "NISN harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (sppPerBulanStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "SPP per bulan harus diisi!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (totalBayarStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Klik 'Hitung Total' untuk menghitung total pembayaran!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cek jika tidak ada bulan yang dipilih
        boolean bulanDipilih = januariCheckBox.isSelected() || februariCheckBox.isSelected() || maretCheckBox.isSelected()
                            || aprilCheckBox.isSelected() || meiCheckBox.isSelected() || juniCheckBox.isSelected()
                            || juliCheckBox.isSelected() || agustusCheckBox.isSelected() || septemberCheckBox.isSelected()
                            || oktoberCheckBox.isSelected() || novemberCheckBox.isSelected() || desemberCheckBox.isSelected();

        if (!bulanDipilih) {
            JOptionPane.showMessageDialog(this, "Pilih setidaknya satu bulan untuk dibayar!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for(int i = 0; i<bulan.length;i++){
            if(bulan[i].isSelected()){
            status[i] = true;
            bulan[i].setEnabled(false);
            }
        }
        boolean cekLunas = true;  
        for (int i = 0; i < bulan.length; i++) {
        if (!status[i]) {
            cekLunas = false;  
            break;  
            }
        }   

        // Jika semua data lengkap, tampilkan pesan konfirmasi pembayaran
        JOptionPane.showMessageDialog(this, "Pembayaran berhasil dilakukan!\n"
                + "Nama: " + nama + "\n"
                + "NISN: " + nisn + "\n"
                + "Jurusan: " + jurusan + "\n"
                + "Total yang Dibayar: Rp " + totalBayarStr, "Pembayaran Berhasil", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnBayarActionPerformed

    private void jurusanComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jurusanComboBoxActionPerformed
        // TODO add your handling code here:
        // Ambil jurusan yang dipilih dari ComboBox
        String jurusan = (String) jurusanComboBox.getSelectedItem();

        // Tentukan nilai SPP per bulan berdasarkan jurusan yang dipilih
        switch (jurusan) {
            case "Teknik Komputer Jaringan":
                sppPerBulanField.setText("200000"); // Misal biaya SPP untuk Teknik Komputer Jaringan adalah 200000
                break;
            case "Teknik Kendaraan Ringan":
                sppPerBulanField.setText("250000"); // Misal biaya SPP untuk Rekayasa Perangkat Lunak adalah 250000
                break;
            case "Multimedia":
                sppPerBulanField.setText("220000"); // Misal biaya SPP untuk Multimedia adalah 220000
                break;
            case "Teknik Mesin":
                sppPerBulanField.setText("210000"); // Misal biaya SPP untuk Akuntansi adalah 210000
                break;
            case "Teknik Sepedah Motor":
                sppPerBulanField.setText("230000"); // Misal biaya SPP untuk Bisnis Daring dan Pemasaran adalah 230000
                break;
            case "Tata Busana":
                sppPerBulanField.setText("300000"); // Misal biaya SPP untuk Bisnis Daring dan Pemasaran adalah 230000
                break;
            default:
                sppPerBulanField.setText(""); // Kosongkan jika tidak ada pilihan jurusan yang sesuai
                break; 
        }
    }//GEN-LAST:event_jurusanComboBoxActionPerformed

    private void btnHitungTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungTotalActionPerformed
        // TODO add your handling code here:
        // Ambil nilai dari SPP per bulan
        String sppPerBulanStr = sppPerBulanField.getText();
        if (sppPerBulanStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Isi terlebih dahulu biaya SPP per bulan!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Konversi nilai SPP per bulan menjadi integer
        int sppPerBulan;
        try {
            sppPerBulan = Integer.parseInt(sppPerBulanStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan nilai SPP per bulan yang valid!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hitung jumlah bulan yang dipilih
        int jumlahBulanDipilih = 0;
        if (januariCheckBox.isSelected()) jumlahBulanDipilih++;
        if (februariCheckBox.isSelected()) jumlahBulanDipilih++;
        if (maretCheckBox.isSelected()) jumlahBulanDipilih++;
        if (aprilCheckBox.isSelected()) jumlahBulanDipilih++;
        if (meiCheckBox.isSelected()) jumlahBulanDipilih++;
        if (juniCheckBox.isSelected()) jumlahBulanDipilih++;
        if (juliCheckBox.isSelected()) jumlahBulanDipilih++;
        if (agustusCheckBox.isSelected()) jumlahBulanDipilih++;
        if (septemberCheckBox.isSelected()) jumlahBulanDipilih++;
        if (oktoberCheckBox.isSelected()) jumlahBulanDipilih++;
        if (novemberCheckBox.isSelected()) jumlahBulanDipilih++;
        if (desemberCheckBox.isSelected()) jumlahBulanDipilih++;

        // Pastikan setidaknya satu bulan dipilih
        if (jumlahBulanDipilih == 0) {
            JOptionPane.showMessageDialog(this, "Pilih setidaknya satu bulan yang ingin dibayar!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hitung total bayar
        int totalBayar = sppPerBulan * jumlahBulanDipilih;

        // Tampilkan hasil total bayar
        totalBayarField.setText(String.valueOf(totalBayar));
    }//GEN-LAST:event_btnHitungTotalActionPerformed

    private void btnRiwayatPembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRiwayatPembayaranActionPerformed
        // TODO add your handling code here:
        // Mengambil data dari form utama
        String nama = namaField.getText();
        String nisn = nisnField.getText();
        String jurusan = jurusanComboBox.getSelectedItem().toString();

        // Membuka frame RiwayatPembayaranFrame dengan data yang diambil
        RiwayatPembayaran riwayat = new RiwayatPembayaran(nama, nisn, jurusan, status);
        riwayat.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnRiwayatPembayaranActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SPP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SPP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox agustusCheckBox;
    private javax.swing.JCheckBox aprilCheckBox;
    private javax.swing.JButton btnBayar;
    private javax.swing.JButton btnHitungTotal;
    private javax.swing.JButton btnRiwayatPembayaran;
    private javax.swing.JCheckBox desemberCheckBox;
    private javax.swing.JCheckBox februariCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox januariCheckBox;
    private javax.swing.JCheckBox juliCheckBox;
    private javax.swing.JCheckBox juniCheckBox;
    private javax.swing.JComboBox<String> jurusanComboBox;
    private javax.swing.JCheckBox maretCheckBox;
    private javax.swing.JCheckBox meiCheckBox;
    private javax.swing.JTextField namaField;
    private javax.swing.JTextField nisnField;
    private javax.swing.JCheckBox novemberCheckBox;
    private javax.swing.JCheckBox oktoberCheckBox;
    private javax.swing.JCheckBox septemberCheckBox;
    private javax.swing.JTextField sppPerBulanField;
    private javax.swing.JTextField totalBayarField;
    // End of variables declaration//GEN-END:variables
}
